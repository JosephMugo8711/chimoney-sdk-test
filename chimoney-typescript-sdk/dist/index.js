function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)({}).hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},t.apply(null,arguments)}function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,o(e,t)}function o(e,t){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},o(e,t)}/*#__PURE__*/e(require("dotenv")).default.config();var n,i=/*#__PURE__*/function(){function e(e){this.apiKey=void 0,this.baseUrl=void 0;var t=e.apikey,r=e.baseUrl;if(!t&&!process.env.API_KEY)throw new Error("API key must be provided either in config or environment variables.");this.apiKey=t||process.env.API_KEY,this.baseUrl=r||process.env.BASE_URL||""}var r=e.prototype;return r.getBaseUrl=function(){if(!this.baseUrl)throw new Error("Base URL is not defined. Please provide a valid base URL.");return this.baseUrl},r.getApiKey=function(){return this.apiKey},r.apiRequest=function(e,r){void 0===r&&(r={});try{var o=this;return Promise.resolve(function(n,i){try{var s=Promise.resolve(fetch(o.getBaseUrl()+"/"+e,t({},r,{headers:t({},r.headers,{Authorization:"Bearer "+o.getApiKey(),"Content-Type":"application/json"})}))).then(function(e){function t(t){return Promise.resolve(e.json())}var r=function(){if(!e.ok)return Promise.resolve(e.text()).then(function(t){throw new Error("API request failed: "+e.statusText+" - "+t)})}();return r&&r.then?r.then(t):t()})}catch(e){return i(e)}return s&&s.then?s.then(void 0,i):s}(0,function(e){throw console.error("API Request Error:",e),e}))}catch(e){return Promise.reject(e)}},r.post=function(e,t){try{return Promise.resolve(this.apiRequest(e,{method:"POST",body:JSON.stringify(t)}))}catch(e){return Promise.reject(e)}},r.get=function(e){try{return Promise.resolve(this.apiRequest(e,{method:"GET"}))}catch(e){return Promise.reject(e)}},e}(),s=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}r(t,e);var o=t.prototype;return o.createChimoneyPayout=function(e){try{return Promise.resolve(this.paymentPost("payouts/chimoney-payout",e))}catch(e){return Promise.reject(e)}},o.paymentPost=function(e,t){try{var r=this;return Promise.resolve(function(o,n){try{var i=Promise.resolve(r.post(e,t))}catch(e){return n(e)}return i&&i.then?i.then(void 0,n):i}(0,function(t){throw new Error("Failed to process "+e+": "+t)}))}catch(e){return Promise.reject(e)}},t}(i),u=/*#__PURE__*/function(e){function t(){return e.apply(this,arguments)||this}return r(t,e),t}(i);n=u,[s].forEach(function(e){Object.getOwnPropertyNames(e.prototype).forEach(function(t){n.prototype[t]=e.prototype[t]})}),module.exports=u;
